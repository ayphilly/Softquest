{"version":3,"sources":["svg/drawkit.svg","svg/notfound.svg","svg/thankyou.svg","svg/SQ.svg","history.js","component/footer.js","pages/contact.js","pages/error.js","pages/preload.js","pages/thankyou.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","history","Footer","className","Component","Contact","state","firstname","lastname","email","number","need","handleSubmit","event","preventDefault","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","console","log","catch","err","handleChange1","setState","target","value","handleChange2","handleChange3","handleChange4","handleChange5","id","src","build","alt","htmlFor","type","this","onChange","name","placeholder","cols","rows","onClick","Error","error","role","to","Preload","brand","ThankYou","loader","setTimeout","clearTimeout","thankyou","App","path","component","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,8UCE5BC,gBCEFC,G,MAAb,uKAGQ,OACI,yBAAKC,UAAU,cACX,yBAAKA,UAAU,YACX,4BACI,+DAGA,gDAGA,yDAbxB,GAA4BC,cCEfC,EAAb,4MAEIC,MAAQ,CACJC,UAAW,GACXC,SAAW,GACXC,MAAO,GACPC,OAAS,GACTC,KAAO,IAPf,EASIC,aAAe,SAACC,GACZA,EAAMC,iBAGNC,MAAM,oCAAqC,CACzCC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,EAAKhB,SACzBiB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,MACbG,OAAM,SAAAC,GACLH,QAAQC,IAAIE,OAxBxB,EA+BIC,cAAgB,SAAChB,GACb,EAAKiB,SAAS,CAAEvB,UAAWM,EAAMkB,OAAOC,SAhChD,EAkCIC,cAAgB,SAACpB,GACb,EAAKiB,SAAS,CAAEtB,SAAUK,EAAMkB,OAAOC,SAnC/C,EAqCIE,cAAgB,SAACrB,GACb,EAAKiB,SAAS,CAAErB,MAAOI,EAAMkB,OAAOC,SAtC5C,EAwCIG,cAAgB,SAACtB,GACb,EAAKiB,SAAS,CAAEpB,OAAQG,EAAMkB,OAAOC,SAzC7C,EA2CII,cAAgB,SAACvB,GACb,EAAKiB,SAAS,CAAEnB,KAAME,EAAMkB,OAAOC,SA5C3C,uDAoDQ,OACI,yBAAMK,GAAG,WACL,yBAAKlC,UAAU,oBAEX,yBAAKA,UAAU,eACX,yBAAKmC,IAAKC,IAAOpC,UAAU,iBAAiBqC,IAAI,WAGpD,yBAAKrC,UAAW,gBACZ,8BACI,kDACuB,6BADvB,gBAGA,yBAAKA,UAAU,SACX,yBAAKA,UAAU,cACX,2BAAOsC,QAAQ,aAAf,cACA,2BAAOC,KAAK,OAAOV,MAAOW,KAAKrC,MAAMC,UAAWqC,SAAUD,KAAKd,cAAe1B,UAAU,YAAYkC,GAAG,YAAYQ,KAAK,YAAYC,YAAY,gBAEpJ,yBAAK3C,UAAU,aACX,2BAAOsC,QAAQ,YAAf,aACA,2BAAOC,KAAK,OAAOV,MAAOW,KAAKrC,MAAME,SAAUoC,SAAUD,KAAKV,cAAe9B,UAAU,WAAW0C,KAAK,WAAWR,GAAG,WAAWS,YAAY,gBAIpJ,yBAAK3C,UAAU,WACX,yBAAKA,UAAU,QACX,2BAAOsC,QAAQ,SAAf,UACA,2BAAOC,KAAK,OAAOV,MAAOW,KAAKrC,MAAMG,MAAOmC,SAAUD,KAAKT,cAAe/B,UAAU,QAAQ0C,KAAK,QAAQR,GAAG,QAAQS,YAAY,WAEpI,yBAAK3C,UAAU,gBACX,2BAAOsC,QAAQ,UAAf,gBACA,2BAAOC,KAAK,OAAOV,MAAOW,KAAKrC,MAAMI,OAAQkC,SAAUD,KAAKR,cAAehC,UAAU,SAAS0C,KAAK,SAASR,GAAG,SAASS,YAAY,WAG5I,yBAAK3C,UAAU,kBACX,yBAAKA,UAAU,YACX,2BAAOsC,QAAQ,QAAf,WACA,8BAAUC,KAAK,OAAOV,MAAOW,KAAKrC,MAAMK,KAAMiC,SAAUD,KAAKP,cAAejC,UAAU,OAAO0C,KAAK,OAAOC,YAAY,iBAAiBC,KAAK,KAAKC,KAAK,QAI7J,4BAAQN,KAAK,SAASvC,UAAU,gBAAgB8C,QAASN,KAAK/B,cAA9D,aAKZ,kBAAC,EAAD,WAlGhB,GAA6BR,a,iCCAhB8C,EAAb,uKAEQ,OACI,yBAAK/C,UAAU,SACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKmC,IAAKa,IAAOhD,UAAU,eAAeqC,IAAI,WAElD,yBAAKrC,UAAU,cACX,gCAAK,0BAAMiD,KAAK,OAAX,gBAAL,8BAAiE,6BAAjE,6BACA,kBAAC,IAAD,CAAMjD,UAAU,aAAakD,GAAG,KAAhC,4BAVxB,GAA2BjD,a,gDCFdkD,EAAb,uKAGQ,OACI,yBAAKnD,UAAU,qBACX,yBAAKA,UAAU,iBACP,yBAAKmC,IAAKiB,IAAOpD,UAAU,cAAcqC,IAAI,gBANrE,GAA6BpC,aCGhBoD,EAAb,4MAEIlD,MAAQ,CACJmD,QAAS,GAHjB,kEAM0B,IAAD,OACjBC,YAAW,WACP,EAAK5B,SAAS,CACV2B,QAAO,MAEZ,KAEHE,iBAbR,+BAkBQ,OAAIhB,KAAKrC,MAAMmD,OAEP,kBAAC,EAAD,MAKA,yBAAKtD,UAAU,YACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKmC,IAAKsB,IAAUzD,UAAU,eAAeqC,IAAI,WAErD,yBAAKrC,UAAU,cACX,gCAAK,0BAAMiD,KAAK,OAAX,gBAAL,2BAA0D,6BAA1D,6BA/B5B,GAA8BhD,aCqBfyD,E,uKAlBX,OACE,yBAAK1D,UAAU,OACb,kBAAC,IAAD,CAAQF,QAASA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6D,KAAK,IAAIC,UAAW1D,EAAS2D,OAAK,IACzC,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWP,IACnC,kBAAC,IAAD,CAAOO,UAAWb,W,GARZ9C,aCIZ6D,G,YAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTjD,MAAK,SAAAsD,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzE,QACfoE,UAAUC,cAAcO,YAI1BzD,QAAQC,IACN,iHAKE+C,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBpD,QAAQC,IAAI,sCAGR+C,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BlD,OAAM,SAAAwB,GACL1B,QAAQ0B,MAAM,4CAA6CA,MCxFjEkC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDUnB,SAAkBf,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwBvB,OAAOC,SAASuB,MACpDC,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMkB,GAAN,sBAEPzB,IAgEV,SAAiCO,EAAOC,GAEtC1D,MAAMyD,EAAO,CACXrD,QAAS,CAAE,iBAAkB,YAE5BI,MAAK,SAAAC,GAEJ,IAAMsE,EAActE,EAASL,QAAQ4E,IAAI,gBAEnB,MAApBvE,EAASwE,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CvB,UAAUC,cAAcuB,MAAM3E,MAAK,SAAAsD,GACjCA,EAAasB,aAAa5E,MAAK,WAC7B4C,OAAOC,SAASgC,eAKpB7B,EAAgBC,EAAOC,MAG1B9C,OAAM,WACLF,QAAQC,IACN,oEAvFA2E,CAAwB7B,EAAOC,GAI/BC,UAAUC,cAAcuB,MAAM3E,MAAK,WACjCE,QAAQC,IACN,iHAMJ6C,EAAgBC,EAAOC,OC/B/BE,K","file":"static/js/main.ba9f8331.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drawkit.53953741.svg\";","module.exports = __webpack_public_path__ + \"static/media/notfound.8c3d2a79.svg\";","module.exports = __webpack_public_path__ + \"static/media/thankyou.0bea8741.svg\";","module.exports = __webpack_public_path__ + \"static/media/SQ.d7e37549.svg\";","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React, {Component} from 'react'\r\nimport './footer.css'\r\n\r\n\r\nexport class Footer extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"Footer-div\">\r\n                <div className=\"footer-l\">\r\n                    <ul>\r\n                        <li>\r\n                            Eleganza Complex, Oregun, Ikeja\r\n                        </li>\r\n                        <li>\r\n                            +234 000 000 000\r\n                        </li>\r\n                        <li>\r\n                            mail@softquest.com\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport build from '../svg/drawkit.svg';\r\nimport './contact.css'\r\nimport history from '../history'\r\nimport {Footer} from '../component/footer'\r\n\r\nexport class Contact extends Component {\r\n\r\n    state = {\r\n        firstname: '',\r\n        lastname : '',\r\n        email: '',\r\n        number : '',\r\n        need : ''\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        //const data = new FormData(event.target);       \r\n        fetch('http://localhost:4000/api/contact', {\r\n          method: 'POST',\r\n          mode: 'cors', // no-cors, *cors, same-origin\r\n          cache: 'no-cache',\r\n          headers: {\r\n            'Content-Type': 'application/json'            \r\n          },\r\n          body: JSON.stringify(this.state),\r\n        }).then(response => {\r\n            console.log(response)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })     \r\n        \r\n\r\n        //history.push('thankyou')\r\n    }\r\n\r\n    handleChange1 = (event) => {\r\n        this.setState({ firstname: event.target.value })\r\n    }\r\n    handleChange2 = (event) => {\r\n        this.setState({ lastname: event.target.value })\r\n    }\r\n    handleChange3 = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    handleChange4 = (event) => {\r\n        this.setState({ number: event.target.value })\r\n    }\r\n    handleChange5 = (event) => {\r\n        this.setState({ need: event.target.value })\r\n    }\r\n\r\n\r\n\r\n    \r\n    render () {\r\n        \r\n        return (\r\n            <div  id=\"contact\">\r\n                <div className=\"contact-form-div\">\r\n                    \r\n                    <div className=\"contact-svg\">\r\n                        <img src={build} className=\"contact-svg-im\" alt=\"Brand\"/>\r\n                    </div>  \r\n\r\n                    <div className= \"contact-form\">\r\n                        <form >\r\n                            <h3>\r\n                                Welcome, Softquest <br/> Systems LTD\r\n                            </h3>\r\n                            <div className=\"names\">\r\n                                <div className=\"first-name\">\r\n                                    <label htmlFor=\"firstname\">FIRST NAME</label>\r\n                                    <input type=\"text\" value={this.state.firstname} onChange={this.handleChange1} className=\"firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\"></input>\r\n                                </div>\r\n                                <div className=\"last-name\">\r\n                                    <label htmlFor=\"lastname\">LAST NAME</label>\r\n                                    <input type=\"text\" value={this.state.lastname} onChange={this.handleChange2} className=\"lastname\" name=\"lastname\" id=\"lastname\" placeholder=\"Last Name\"></input>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"contact\">\r\n                                <div className=\"mail\">\r\n                                    <label htmlFor=\"email\">E-MAIL</label>\r\n                                    <input type=\"text\" value={this.state.email} onChange={this.handleChange3} className=\"email\" name=\"email\" id=\"Email\" placeholder=\"Email\"></input>\r\n                                </div>\r\n                                <div className=\"phone-number\">\r\n                                    <label htmlFor=\"number\">PHONE NUMBER</label>\r\n                                    <input type=\"text\" value={this.state.number} onChange={this.handleChange4} className=\"number\" name=\"number\" id=\"number\" placeholder=\"+234\"></input>\r\n                                </div>         \r\n                            </div>\r\n                            <div className=\"textarea-input\">\r\n                                <div className=\"big-text\">\r\n                                    <label htmlFor=\"need\">SERVICE</label>\r\n                                    <textarea type=\"text\" value={this.state.need} onChange={this.handleChange5} className=\"need\" name=\"need\" placeholder=\"Type Something\" cols=\"30\" rows=\"3\"></textarea>\r\n                                </div>                                    \r\n                                    \r\n                            </div>    \r\n                            <button type=\"submit\" className=\"button-submit\" onClick={this.handleSubmit}>SUBMIT</button>                        \r\n                        </form>\r\n                        \r\n                    </div>             \r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n//import error from '../svg/error.svg';\r\nimport error from '../svg/notfound.svg';\r\nimport './error.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Error extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"error\">\r\n                <div className=\"error-box\">\r\n                    <div className=\"error-svg\">\r\n                        <img src={error} className=\"error-svg-im\" alt=\"Brand\"/>\r\n                    </div>\r\n                    <div className=\"error-text\">\r\n                        <h3> <span role=\"img\">&#128532;</span>  Sorry, We Can't Find The <br/> Page You're Looking For.</h3>\r\n                        <Link className=\"error-link\" to=\"/\">                            \r\n                            back to home page\r\n                        </Link>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React , {Component} from 'react';\r\nimport './preload.css';\r\nimport brand from '../svg/SQ.svg';\r\n\r\nexport class Preload extends Component {\r\n    \r\n    render () {\r\n        return (\r\n            <div className=\"preload-container\">\r\n                <div className=\"preload-brand\">\r\n                        <img src={brand} className=\"App-preload\" alt=\"Brand\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n//import error from '../svg/error.svg';\r\nimport thankyou from '../svg/thankyou.svg';\r\nimport './thankyou.css';\r\nimport {Preload} from './preload'\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport class ThankYou extends Component {\r\n    \r\n    state = {\r\n        loader : true\r\n    }\r\n\r\n    componentDidMount () {\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                loader:false\r\n            })\r\n        }, 1000)\r\n\r\n        clearTimeout();\r\n    }\r\n\r\n    \r\n    render () {\r\n        if (this.state.loader) {\r\n            return (\r\n                <Preload/>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"thankyou\">\r\n                    <div className=\"thank-box\">\r\n                        <div className=\"thank-svg\">\r\n                            <img src={thankyou} className=\"thank-svg-im\" alt=\"Brand\"/>\r\n                        </div>\r\n                        <div className=\"thank-text\">\r\n                            <h3> <span role=\"img\" >&#128151;</span>  Thank You, We’ll <br/>Contact You Soon. </h3>\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {Router, Route, Switch } from 'react-router-dom';\nimport {Contact} from './pages/contact'\nimport {Error} from './pages/error'\nimport {ThankYou} from './pages/thankyou'\nimport history from './history'\nimport {Footer} from './component/footer'\nclass App extends Component {\n  render () {\n    return (\n      <div className=\"App\">\n        <Router history={history}>\n          <Switch>\n            <Route path=\"/\" component={Contact} exact />   \n            <Route path=\"/thankyou\" component={ThankYou}/>        \n            <Route component={Error} />\n          </Switch>\n        </Router>\n        \n        \n      </div>\n    );   \n\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,  \n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}